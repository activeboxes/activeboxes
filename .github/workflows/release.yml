name: Release Docker

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write

jobs:
  Release:
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set RELEASE env var from package.json
        run: echo RELEASE=$(node --print "require('./package.json').version") >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/${{ matrix.arch }}
          context: .
          file: ./Dockerfile
          provenance: false
          push: true
          tags: |
            ${{ github.repository }}:${{ env.RELEASE }}-${{ matrix.arch }}
            ghcr.io/${{ github.repository }}:${{ env.RELEASE }}-${{ matrix.arch }}

  Release-Combined-Image:
    needs:
      - Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set RELEASE env var from package.json
        run: echo RELEASE=$(node --print "require('./package.json').version") >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag Docker Hub release manifest
        run: |
          docker manifest create ${{ github.repository }}:${{ env.RELEASE }} \
            --amend ${{ github.repository }}:${{ env.RELEASE }}-amd64 \
            --amend ${{ github.repository }}:${{ env.RELEASE }}-arm64

      - name: Tag Docker Hub latest manifest
        run: |
          docker manifest create ${{ github.repository }}:latest \
            --amend ${{ github.repository }}:${{ env.RELEASE }}-amd64 \
            --amend ${{ github.repository }}:${{ env.RELEASE }}-arm64

      - name: Create GitHub release manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository }}:${{ env.RELEASE }} \
            --amend ghcr.io/${{ github.repository }}:${{ env.RELEASE }}-amd64 \
            --amend ghcr.io/${{ github.repository }}:${{ env.RELEASE }}-arm64

      - name: Create GitHub latest manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository }}:latest \
            --amend ghcr.io/${{ github.repository }}:${{ env.RELEASE }}-amd64 \
            --amend ghcr.io/${{ github.repository }}:${{ env.RELEASE }}-arm64

      - name: Push images
        run: |
          docker manifest push ${{ github.repository }}:${{ env.RELEASE }} \
            && docker manifest push ${{ github.repository }}:latest \
            && docker manifest push ghcr.io/${{ github.repository }}:${{ env.RELEASE }} \
            && docker manifest push ghcr.io/${{ github.repository }}:latest
